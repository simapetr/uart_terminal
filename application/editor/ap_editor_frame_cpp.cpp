/**
  ****************************************************************************
  * @file    ap_editor_frame_cpp.cpp
  * @author  Ing. Petr Simek
  * @version V1.5
  * @date    28.03.2020
  * @brief   Text editor window component creator
  ****************************************************************************
  * @attention
  * <h2><center>&copy; COPYRIGHT PORTTRONIC</center></h2>
  ****************************************************************************
  */

/**
  ****************************************************************************
  * Library
  ****************************************************************************
  */

#include "ap_editor_frame_h.h"
#include "ap_uart_terminal_frame_h.h"

//(*InternalHeaders(editor_frame)
#include <wx/bitmap.h>
#include <wx/image.h>
#include <wx/intl.h>
#include <wx/string.h>
//*)
#include <wx/msgdlg.h>

/**
  * @defgroup Application
  * @brief Application layer
  * @{
  */

/**
  * @defgroup Script_editor
  * @brief Script editor frame
  * @{
  */

/**
  ****************************************************************************
  * Local variable
  ****************************************************************************
  */

#include "lp_editor_xpm.xpm"
#include "lp_new_xpm.xpm"
#include "lp_new_template_xpm.xpm"
#include "lp_open_xpm.xpm"
#include "lp_save_xpm.xpm"
#include "lp_saveas_xpm.xpm"
#include "lp_find_xpm.xpm"
#include "lp_find_next_xpm.xpm"
#include "lp_find_prev_xpm.xpm"
#include "lp_replace_xpm.xpm"
#include "lp_goto_xpm.xpm"
#include "lp_quit_xpm.xpm"
#include "lp_info_xpm.xpm"
#include "lp_js_xpm.xpm"

//(*IdInit(editor_frame)
const long editor_frame::l_id_main_editor = wxNewId();
const long editor_frame::l_id_file_new_empty_item_wxmenu = wxNewId();
const long editor_frame::l_id_file_new_template_item_wxmenu = wxNewId();
const long editor_frame::l_id_file_new_item_wxmenu = wxNewId();
const long editor_frame::l_id_file_open_item_wxmenu = wxNewId();
const long editor_frame::l_id_file_save_item_wxmenu = wxNewId();
const long editor_frame::l_id_file_save_as_item_wxmenu = wxNewId();
const long editor_frame::l_id_file_quit_item_wxmenu = wxNewId();
const long editor_frame::l_id_search_find_item_wxmenu = wxNewId();
const long editor_frame::l_id_search_find_next_item_wxmenu = wxNewId();
const long editor_frame::l_id_search_find_prev_item_wxmenu = wxNewId();
const long editor_frame::l_id_search_replace_item_wxmenu = wxNewId();
const long editor_frame::l_id_search_goto_line_item_wxmenu = wxNewId();
const long editor_frame::l_id_help_about_item_wxmenu = wxNewId();
const long editor_frame::l_id_help_js_doc_item_wxmenu = wxNewId();
const long editor_frame::l_id_editor_wxstatusbar = wxNewId();
const long editor_frame::l_id_pos_wxtimer = wxNewId();
//*)

/**
  ****************************************************************************
  * Function
  ****************************************************************************
  */

BEGIN_EVENT_TABLE(editor_frame,wxFrame)
    //(*EventTable(editor_frame)
    //*)
END_EVENT_TABLE()

/** @brief Constructor
 *
 * @param [IN] parent : Pointer on window generated by OS for application
 * @param [IN] id : Window identification
 * @return void
 *
 */

editor_frame::editor_frame(wxWindow* parent)
{

    this->lp_parent_wxwindow = parent;
    //(*Initialize(editor_frame)
    Create(parent, wxID_ANY, _("Script Editor"), wxDefaultPosition, wxDefaultSize, wxDEFAULT_FRAME_STYLE, _T("wxID_ANY"));
    SetClientSize(wxSize(815,440));
    lp_main_wxboxsizer = new wxBoxSizer(wxVERTICAL);
    lp_main_editor = new editor(this,l_id_main_editor,wxDefaultPosition,wxDefaultSize);
    lp_main_wxboxsizer->Add(lp_main_editor, 1, wxEXPAND, 5);
    SetSizer(lp_main_wxboxsizer);
    lp_main_wxmenubar = new wxMenuBar();
    lp_file_wxmenu = new wxMenu();
    l_file_new_item_wxmenu = new wxMenu();
    l_file_new_empty_item_wxmenu = new wxMenuItem(l_file_new_item_wxmenu, l_id_file_new_empty_item_wxmenu, _("Empty\tCtrl-Shift-N"), _("New empty file"), wxITEM_NORMAL);
    l_file_new_empty_item_wxmenu->SetBitmap(wxIcon(lp_new_si8));
    l_file_new_item_wxmenu->Append(l_file_new_empty_item_wxmenu);
    l_file_new_template_item_wxmenu = new wxMenuItem(l_file_new_item_wxmenu, l_id_file_new_template_item_wxmenu, _("Template\tCtrl-Shift-T"), _("New tempate file"), wxITEM_NORMAL);
    l_file_new_template_item_wxmenu->SetBitmap(wxIcon(lp_new_template_si8));
    l_file_new_item_wxmenu->Append(l_file_new_template_item_wxmenu);
    lp_file_wxmenu->Append(l_id_file_new_item_wxmenu, _("New"), l_file_new_item_wxmenu, _("New file"));
    lp_file_wxmenu->AppendSeparator();
    l_file_open_item_wxmenu = new wxMenuItem(lp_file_wxmenu, l_id_file_open_item_wxmenu, _("Open\tCtrl-O"), _("Open file"), wxITEM_NORMAL);
    l_file_open_item_wxmenu->SetBitmap(wxIcon(lp_open_si8));
    lp_file_wxmenu->Append(l_file_open_item_wxmenu);
    l_file_save_item_wxmenu = new wxMenuItem(lp_file_wxmenu, l_id_file_save_item_wxmenu, _("Save\tCtrl-S"), _("Save open file"), wxITEM_NORMAL);
    l_file_save_item_wxmenu->SetBitmap(wxIcon(lp_save_si8));
    lp_file_wxmenu->Append(l_file_save_item_wxmenu);
    l_file_save_as_item_wxmenu = new wxMenuItem(lp_file_wxmenu, l_id_file_save_as_item_wxmenu, _("Save as"), _("Save open file as"), wxITEM_NORMAL);
    l_file_save_as_item_wxmenu->SetBitmap(wxIcon(lp_saveas_si8));
    lp_file_wxmenu->Append(l_file_save_as_item_wxmenu);
    lp_file_wxmenu->AppendSeparator();
    l_file_quit_item_wxmenu = new wxMenuItem(lp_file_wxmenu, l_id_file_quit_item_wxmenu, _("Quit\tAlt-F4"), _("Close editor"), wxITEM_NORMAL);
    l_file_quit_item_wxmenu->SetBitmap(wxIcon(lp_quit_si8));
    lp_file_wxmenu->Append(l_file_quit_item_wxmenu);
    lp_main_wxmenubar->Append(lp_file_wxmenu, _("&File"));
    lp_search_wxmenu = new wxMenu();
    l_search_find_item_wxmenu = new wxMenuItem(lp_search_wxmenu, l_id_search_find_item_wxmenu, _("Find\tCtrl-F"), _("Find word from surrent cursor position"), wxITEM_NORMAL);
    l_search_find_item_wxmenu->SetBitmap(wxIcon(lp_find_si8));
    lp_search_wxmenu->Append(l_search_find_item_wxmenu);
    l_search_find_next_item_wxmenu = new wxMenuItem(lp_search_wxmenu, l_id_search_find_next_item_wxmenu, _("Find next\tF3"), _("Find next word"), wxITEM_NORMAL);
    l_search_find_next_item_wxmenu->SetBitmap(wxIcon(lp_find_next_si8));
    lp_search_wxmenu->Append(l_search_find_next_item_wxmenu);
    l_search_find_prev_item_wxmenu = new wxMenuItem(lp_search_wxmenu, l_id_search_find_prev_item_wxmenu, _("Find previous\tShift-F3"), _("Find previous word"), wxITEM_NORMAL);
    l_search_find_prev_item_wxmenu->SetBitmap(wxIcon(lp_find_prev_si8));
    lp_search_wxmenu->Append(l_search_find_prev_item_wxmenu);
    lp_search_wxmenu->AppendSeparator();
    l_search_replace_item_wxmenu = new wxMenuItem(lp_search_wxmenu, l_id_search_replace_item_wxmenu, _("Repalce...\tCtrl-R"), _("Replace defined word"), wxITEM_NORMAL);
    l_search_replace_item_wxmenu->SetBitmap(wxIcon(lp_replace_si8));
    lp_search_wxmenu->Append(l_search_replace_item_wxmenu);
    lp_search_wxmenu->AppendSeparator();
    l_search_goto_line_item_wxmenu = new wxMenuItem(lp_search_wxmenu, l_id_search_goto_line_item_wxmenu, _("Goto line...\tCtrl-G"), _("Go to line"), wxITEM_NORMAL);
    l_search_goto_line_item_wxmenu->SetBitmap(wxIcon(lp_goto_si8));
    lp_search_wxmenu->Append(l_search_goto_line_item_wxmenu);
    lp_main_wxmenubar->Append(lp_search_wxmenu, _("Search"));
    lp_help_wxmenu = new wxMenu();
    lp_help_about_item_wxmenu = new wxMenuItem(lp_help_wxmenu, l_id_help_about_item_wxmenu, _("About"), _("Show info about script editor application"), wxITEM_NORMAL);
    lp_help_about_item_wxmenu->SetBitmap(wxIcon(lp_info_si8));
    lp_help_wxmenu->Append(lp_help_about_item_wxmenu);
    lp_help_wxmenu->AppendSeparator();
    l_help_js_doc_item_wxmenu = new wxMenuItem(lp_help_wxmenu, l_id_help_js_doc_item_wxmenu, _("JS doc\tF1"), _("Documentation internal JerryScript class"), wxITEM_NORMAL);
    l_help_js_doc_item_wxmenu->SetBitmap(wxIcon(lp_js_si8));
    lp_help_wxmenu->Append(l_help_js_doc_item_wxmenu);
    lp_main_wxmenubar->Append(lp_help_wxmenu, _("Help"));
    SetMenuBar(lp_main_wxmenubar);
    lp_editor_wxstatusbar = new wxStatusBar(this, l_id_editor_wxstatusbar, 0, _T("l_id_editor_wxstatusbar"));
    int __wxStatusBarWidths_1[2] = { -10, 160 };
    int __wxStatusBarStyles_1[2] = { wxSB_NORMAL, wxSB_NORMAL };
    lp_editor_wxstatusbar->SetFieldsCount(2,__wxStatusBarWidths_1);
    lp_editor_wxstatusbar->SetStatusStyles(2,__wxStatusBarStyles_1);
    SetStatusBar(lp_editor_wxstatusbar);
    lp_pos_wxtimer.SetOwner(this, l_id_pos_wxtimer);
    lp_pos_wxtimer.Start(100, false);
    SetSizer(lp_main_wxboxsizer);
    Layout();

    Connect(l_id_file_new_empty_item_wxmenu,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&editor_frame::on_file_new_empty_item_wxmenu_selected);
    Connect(l_id_file_new_template_item_wxmenu,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&editor_frame::on_file_new_template_item_wxmenu_selected);
    Connect(l_id_file_open_item_wxmenu,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&editor_frame::on_file_open_item_wxmenu_selected);
    Connect(l_id_file_save_item_wxmenu,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&editor_frame::on_file_save_item_wxmenu_selected);
    Connect(l_id_file_save_as_item_wxmenu,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&editor_frame::on_file_save_as_item_wxmenu_selected);
    Connect(l_id_file_quit_item_wxmenu,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&editor_frame::on_file_quit_item_wxmenu_selected);
    Connect(l_id_search_find_item_wxmenu,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&editor_frame::on_search_find_item_wxmenu_selected);
    Connect(l_id_search_find_next_item_wxmenu,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&editor_frame::on_search_find_next_item_wxmenu_selected);
    Connect(l_id_search_find_prev_item_wxmenu,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&editor_frame::on_search_find_prev_item_wxmenu_selected);
    Connect(l_id_search_replace_item_wxmenu,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&editor_frame::on_search_replace_item_wxmenu_selected);
    Connect(l_id_search_goto_line_item_wxmenu,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&editor_frame::on_search_goto_line_item_wxmenu_selected);
    Connect(l_id_help_about_item_wxmenu,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&editor_frame::on_help_about_item_wxmenu_selected);
    Connect(l_id_help_js_doc_item_wxmenu,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&editor_frame::on_help_js_doc_item_wxmenu_selected);
    Connect(l_id_pos_wxtimer,wxEVT_TIMER,(wxObjectEventFunction)&editor_frame::on_pos_wxtimer_trigger);
    Connect(wxID_ANY,wxEVT_CLOSE_WINDOW,(wxObjectEventFunction)&editor_frame::on_close_event);
    //*)
    // Set frame icon
    SetIcon(wxIcon( lp_editor_si8 ));
    // Load last script
    this->load(((main_frame*)(this->lp_parent_wxwindow))->get());
    // Register event
    this->lp_main_editor->set(editor::e_start, this, this->start_event);
    this->lp_main_editor->set(editor::e_path, this, this->path_event);
    return;
}

/** @brief Destructor
 *
 * @param void
 * @return void
 *
 */

editor_frame::~editor_frame()
{
    return;
}

/** @brief Load file
 *
 * @param [IN] path_str : File path
 * @return void
 *
 */

void editor_frame::load(wxString path_str)
{
wxString label_str;

    this->lp_main_editor->load(path_str);
    ((main_frame*)(this->lp_parent_wxwindow))->set(path_str);
    this->lp_editor_wxstatusbar->SetStatusText(path_str, editor_frame::e_path);
    return;
}

/** @brief Set editor run button state
 *
 * @param [IN] status_b : Run state
 *   @arg true : Run
 *   @arg false : Stop
 * @return void
 *
 */

void editor_frame::run(bool status_b)
{
    this->lp_main_editor->run(status_b);
    return;
}

/**
  ****************************************************************************
  * Local function
  ****************************************************************************
  */

/** @brief Load file
 *
 * @param [IN] p_parametr_void : Event parameter (this)
 * @param [IN] p_data_sui8 : Event data buffer
 * @param [IN] length_ui32 : Event data length
 * @return uint32_t : Start state
 *
 */

uint32_t editor_frame::start_event(void* p_parametr_void, uint8_t *p_data_sui8, uint32_t WXUNUSED(length_ui32))
{
editor_frame *p_bkp_this = (editor_frame*)p_parametr_void;

    ((main_frame*)(p_bkp_this->lp_parent_wxwindow))->run(p_data_sui8[0]);
    return (uint32_t)p_data_sui8[0];
}

/** @brief Set path event
 *
 * @param [IN] p_parametr_void : Event parameter (this)
 * @param [IN] p_data_sui8 : Event data buffer
 * @param [IN] length_ui32 : Event data length
 * @return uint32_t : Change state
 *
 */

uint32_t editor_frame::path_event(void* p_parametr_void, uint8_t *p_data_sui8, uint32_t length_ui32)
{
editor_frame *p_bkp_this = (editor_frame*)p_parametr_void;
wxString* p_path_str;

    if(length_ui32 == sizeof(wxString*))
    {
        p_path_str = (wxString*)p_data_sui8;
        ((main_frame*)(p_bkp_this->lp_parent_wxwindow))->set(*p_path_str);
        p_bkp_this->lp_editor_wxstatusbar->SetStatusText(*p_path_str, editor_frame::e_path);
    }
    return 1;
}

/** @brief New file menu event
 *
 * @param [IN] event : Event parameter
 * @return void
 *
 */

void editor_frame::on_file_new_empty_item_wxmenu_selected(wxCommandEvent& event)
{
    // Create new script file
    this->lp_main_editor->new_file();
    return;
}

/** @brief New template file menu event
 *
 * @param [IN] event : Event parameter
 * @return void
 *
 */

void editor_frame::on_file_new_template_item_wxmenu_selected(wxCommandEvent& event)
{
    // Create new script file
    this->lp_main_editor->new_template();
    return;
}

/** @brief Open file item selected event
 *
 * @param [IN] event : standard event input data
 * @return void
 *
 */

void editor_frame::on_file_open_item_wxmenu_selected(wxCommandEvent& event)
{
    this->lp_main_editor->load();
    return;
}

/** @brief Save file item selected event
 *
 * @param [IN] event : standard event input data
 * @return void
 *
 */

void editor_frame::on_file_save_item_wxmenu_selected(wxCommandEvent& event)
{
    this->lp_main_editor->save();
    return;
}

/** @brief Save file item selected event
 *
 * @param [IN] event : standard event input data
 * @return void
 *
 */

void editor_frame::on_file_save_as_item_wxmenu_selected(wxCommandEvent& event)
{
    // Save file to new destination
    this->lp_main_editor->save_as();
    return;
}

/** @brief Find word from current position
 *
 * @param [IN] event : standard event input data
 * @return void
 *
 */

void editor_frame::on_search_find_item_wxmenu_selected(wxCommandEvent& event)
{
    this->lp_main_editor->find();
    return;
}

/** @brief Find next word
 *
 * @param [IN] event : standard event input data
 * @return void
 *
 */

void editor_frame::on_search_find_next_item_wxmenu_selected(wxCommandEvent& event)
{
    this->lp_main_editor->find_next();
    return;
}

/** @brief Find previous word
 *
 * @param [IN] event : standard event input data
 * @return void
 *
 */

void editor_frame::on_search_find_prev_item_wxmenu_selected(wxCommandEvent& event)
{
    this->lp_main_editor->find_prev();
    return;
}

/** @brief Replace selected or custom word
 *
 * @param [IN] event : standard event input data
 * @return void
 *
 */

void editor_frame::on_search_replace_item_wxmenu_selected(wxCommandEvent& event)
{
    this->lp_main_editor->replace();
    return;
}

/** @brief Go to line
 *
 * @param [IN] event : standard event input data
 * @return void
 *
 */

void editor_frame::on_search_goto_line_item_wxmenu_selected(wxCommandEvent& event)
{
    this->lp_main_editor->goto_line();
    return;
}

/** @brief Close window
 *
 * @param [IN] event : Event parameter
 * @return void
 *
 */

void editor_frame::on_close_event(wxCloseEvent& event)
{
    // Hide frame
    this->Show(false);
    return;
}

/** @brief Close window menu event
 *
 * @param [IN] event : Event parameter
 * @return void
 *
 */

void editor_frame::on_file_quit_item_wxmenu_selected(wxCommandEvent& event)
{
    // Hide frame
    this->Show(false);
    return;
}

/** @brief About Editor info
 *
 * @param [IN] event : Event parameter
 * @return void
 *
 */

void editor_frame::on_help_about_item_wxmenu_selected(wxCommandEvent& event)
{
    wxMessageBox( _("JerryScript editor\nBUILD : " __DATE__ "\nPORTTRONIC(c)\nwxWidget 3.0.4\nScintilla\nMinGW 5.1.0. x64"), _("About"));
    return;
}

/** @brief JerryScript internal class documentation
 *
 * @param [IN] event : standard event input data
 * @return void
 *
 */

void editor_frame::on_help_js_doc_item_wxmenu_selected(wxCommandEvent& event)
{
    // Show help for JerryScript
    ShellExecute( NULL, _T( "open" ), _T( "js_doc.chm" ), NULL, NULL, SW_NORMAL );
    return;
}

/** @brief Cursor position redraw
 *
 * @param [IN] event : standard event input data
 * @return void
 *
 */

void editor_frame::on_pos_wxtimer_trigger(wxTimerEvent& event)
{
static wxString old_pos_str;
wxString pos_str = this->lp_main_editor->get();

    if(!old_pos_str.IsSameAs(pos_str))
    {
        old_pos_str = pos_str;
        this->lp_editor_wxstatusbar->SetStatusText(pos_str, editor_frame::e_position);
    }
    return;
}

/**
* @}
*/

/**
* @}
*/

/*****************************************************END OF FILE************/
