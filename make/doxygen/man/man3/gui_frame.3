.TH "gui_frame" 3 "Sun Feb 16 2020" "Version V2.0" "UART Terminal" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gui_frame
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <in_js_gui_frame_h\&.h>\fP
.PP
Inherits wxFrame\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBgui_frame\fP (wxWindow *p_parent_window, void *p_jerryscript_void)"
.br
.RI "Constructor\&. "
.ti -1c
.RI "virtual \fB~gui_frame\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "wxAuiManager * \fBget_aui_manager\fP (void)"
.br
.RI "Get AUI manager\&. "
.ti -1c
.RI "void \fBframe_show\fP (bool status_b, wxString name_str)"
.br
.RI "Show frame\&. "
.ti -1c
.RI "uint32_t \fBadd_panel\fP (wxString panel_name_str, bool horizontal_b)"
.br
.RI "Add AUI panel\&. "
.ti -1c
.RI "uint32_t \fBget_panel_sizer\fP (double panel_index_d)"
.br
.RI "Get panel main sizer\&. "
.ti -1c
.RI "wxPanel * \fBget_panel\fP (double index_d)"
.br
.RI "Get sizer\&. "
.ti -1c
.RI "uint32_t \fBadd_sizer\fP (double sizer_index_d, double proportion_d, bool horizontal_b)"
.br
.RI "Add sizer\&. "
.ti -1c
.RI "uint32_t \fBadd_panel_sizer\fP (double panel_index_d, double proportion_d, bool horizontal_b)"
.br
.RI "Add sizer\&. "
.ti -1c
.RI "wxBoxSizer * \fBget_sizer\fP (double index_d)"
.br
.RI "Get sizer\&. "
.ti -1c
.RI "wxPanel * \fBget_sizer_panel\fP (double index_d)"
.br
.RI "Get sizer panel\&. "
.ti -1c
.RI "uint32_t \fBadd_graph\fP (double sizer_index_d, wxString name_str, double graph_range_d, double buffer_length_d, double time_step_d)"
.br
.RI "Add graph window\&. "
.ti -1c
.RI "uint32_t \fBinsert_signal\fP (uint32_t graph_ui32, wxString signal_label_str, uint32_t color_ui32=0, uint32_t width_ui32=1, uint32_t style_ui32=0)"
.br
.RI "Insert signal in to graph\&. "
.ti -1c
.RI "bool \fBset_graph_data\fP (uint32_t graph_ui32, vector< double > &pv_data_d)"
.br
.RI "Insert One sample for all signal in to graph window\&. "
.ti -1c
.RI "uint32_t \fBadd_button\fP (double sizer_index_d, wxString text_str, double proportion_d, bool expand_b)"
.br
.RI "Add button\&. "
.ti -1c
.RI "bool \fBset_button_event\fP (double button_index_d, wxString event_fct_str)"
.br
.RI "Set button event\&. "
.ti -1c
.RI "uint32_t \fBadd_slider\fP (double sizer_index_d, double min_d, double max_d, double proportion_d, bool expand_b)"
.br
.RI "Add slider\&. "
.ti -1c
.RI "bool \fBset_slider_event\fP (double index_d, wxString event_fct_str)"
.br
.RI "Set slider event\&. "
.ti -1c
.RI "int32_t \fBget_slider_data\fP (double index_d)"
.br
.RI "Get slider data\&. "
.ti -1c
.RI "void \fBset_slider_data\fP (double index_d, double data_d)"
.br
.RI "Set slider data\&. "
.ti -1c
.RI "uint32_t \fBadd_static_text\fP (double sizer_index_d, wxString text_str, double proportion_d, bool expand_b)"
.br
.RI "Add static_text\&. "
.ti -1c
.RI "bool \fBset_static_text\fP (double static_text_index_d, wxString text_str)"
.br
.RI "Set static_text text\&. "
.ti -1c
.RI "uint32_t \fBadd_textctrl\fP (double sizer_index_d, wxString text_str, double proportion_d, bool expand_b, bool multiline_b)"
.br
.RI "Add Text control\&. "
.ti -1c
.RI "bool \fBset_textctrl\fP (double static_text_index_d, wxString text_str)"
.br
.RI "Set textctrl text\&. "
.ti -1c
.RI "bool \fBappend_textctrl\fP (double static_text_index_d, wxString text_str)"
.br
.RI "Append textctrl text\&. "
.ti -1c
.RI "wxString \fBget_textctrl\fP (double static_text_index_d, uint32_t line_ui32)"
.br
.RI "Get textctrl text\&. "
.ti -1c
.RI "uint32_t \fBadd_check_box\fP (double sizer_index_d, wxString text_str, double proportion_d, bool expand_b, bool state_b)"
.br
.RI "Add check box\&. "
.ti -1c
.RI "bool \fBset_check_box_event\fP (double check_box_index_d, wxString event_fct_str)"
.br
.RI "Set check box event\&. "
.ti -1c
.RI "bool \fBset_check_box\fP (double check_box_index_d, bool state_b)"
.br
.RI "Set check box state\&. "
.ti -1c
.RI "bool \fBget_check_box\fP (double check_box_index_d)"
.br
.RI "Get check box state\&. "
.ti -1c
.RI "uint32_t \fBadd_gauge\fP (double sizer_index_d, double proportion_d, bool expand_b, double size_d)"
.br
.RI "Add gauge\&. "
.ti -1c
.RI "bool \fBset_gauge\fP (double check_box_index_d, double value_d)"
.br
.RI "Set gauge state\&. "
.ti -1c
.RI "double \fBget_gauge\fP (double check_box_index_d)"
.br
.RI "Get gauge value\&. "
.in -1c
.SH "Detailed Description"
.PP 
Struct
.PP
Class 
.PP
Definition at line 58 of file in_js_gui_frame_h\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for UART Terminal from the source code\&.
